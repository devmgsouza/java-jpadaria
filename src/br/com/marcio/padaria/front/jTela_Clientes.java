/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package br.com.marcio.padaria.front;


import br.com.marcio.padaria.front.funcoes.TableModelPendencias;
import br.com.marcio.padaria.model.Clientes;
import br.com.marcio.padaria.model.Pendencias;
import br.com.marcio.padaria.repositorio.Imp.ClientesImp;
import br.com.marcio.padaria.repositorio.Imp.PendenciasImp;
import br.com.marcio.padaria.repositorio.model.Exception.ClientesException;
import br.com.marcio.padaria.repositorio.model.Exception.PendenciasException;
import java.awt.event.ActionEvent;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.TreeSet;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractAction;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.JRootPane;
import javax.swing.KeyStroke;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;


/**
 *
 * @author Marcio
 */
public class jTela_Clientes extends javax.swing.JDialog {
    ArrayList<Pendencias> listaRelatorio;
    private static jTela_Clientes instance = null;
    /**
     * Creates new form jTela_Clientes
     */
    public jTela_Clientes() {
        initComponents();
        /* Desabilitando jPanel Pendencias */
        AtivaDesativaJPanel(jPanelPendencias, false);
        /* Desabilitando jPanel Filtro */
        AtivaDesativaJPanel(jPanelFiltro, false);
        /* Carrega todos os usuários no jComboNome */
        buscarTodosOsUsuarios();
        /*Evento KeyPressed com Tecla ENTER no componente jComboBox*/
        jComboBoxNomeKeyPressed();
        /*Função de Acessibilidade*/
        setAcessibilidade();
        
        listaRelatorio = new ArrayList<Pendencias>();
        
        
            
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupoFiltro = new javax.swing.ButtonGroup();
        jPanelCadastroCliente = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jComboBoxNome = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldCodigo = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldEndereco = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jButtonAdicionarCliente = new javax.swing.JButton();
        jButtonSalvarCliente = new javax.swing.JButton();
        jButtonExcluirCliente = new javax.swing.JButton();
        jButtonAlterarCliente = new javax.swing.JButton();
        jButtonCancelarCliente = new javax.swing.JButton();
        jTextFieldTelefone = new javax.swing.JFormattedTextField();
        jButtonBuscar = new javax.swing.JButton();
        jPanelFiltro = new javax.swing.JPanel();
        jRadioButtonSemFiltro = new javax.swing.JRadioButton();
        jRadioButtonPagamentos = new javax.swing.JRadioButton();
        jRadioButtonPendencias = new javax.swing.JRadioButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jDateInicio = new com.toedter.calendar.JDateChooser();
        jDateFinal = new com.toedter.calendar.JDateChooser();
        jLabel7 = new javax.swing.JLabel();
        jButtonPesquisarPendencia = new javax.swing.JButton();
        jButtonLimparTela = new javax.swing.JButton();
        jPanelPendencias = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTablePendencias = new javax.swing.JTable();
        jButtonIncluirPendencia = new javax.swing.JButton();
        jButtonExcluirLinhaPendencia = new javax.swing.JButton();
        jButtonLimparFichaPendencia = new javax.swing.JButton();
        jButtonPagamentoPendencia = new javax.swing.JButton();
        jButtonRelatorioPendencia = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabelValorTotal = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro de Clientes e Pendências");
        setResizable(false);
        setType(java.awt.Window.Type.UTILITY);

        jPanelCadastroCliente.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setText("Nome:");

        jComboBoxNome.setEditable(true);
        jComboBoxNome.setMaximumRowCount(6);
        jComboBoxNome.setToolTipText("");
        jComboBoxNome.setAutoscrolls(true);
        jComboBoxNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxNomeActionPerformed(evt);
            }
        });
        jComboBoxNome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBoxNomeKeyPressed(evt);
            }
        });

        jLabel2.setText("Código:");

        jTextFieldCodigo.setEnabled(false);

        jLabel3.setText("Endereço:");

        jTextFieldEndereco.setEnabled(false);
        jTextFieldEndereco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldEnderecoActionPerformed(evt);
            }
        });

        jLabel4.setText("Telefone:");

        jButtonAdicionarCliente.setMnemonic('a');
        jButtonAdicionarCliente.setText("Adicionar");
        jButtonAdicionarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAdicionarClienteActionPerformed(evt);
            }
        });

        jButtonSalvarCliente.setMnemonic('s');
        jButtonSalvarCliente.setText("Salvar");
        jButtonSalvarCliente.setEnabled(false);
        jButtonSalvarCliente.setMaximumSize(new java.awt.Dimension(77, 23));
        jButtonSalvarCliente.setMinimumSize(new java.awt.Dimension(77, 23));
        jButtonSalvarCliente.setPreferredSize(new java.awt.Dimension(77, 23));
        jButtonSalvarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalvarClienteActionPerformed(evt);
            }
        });

        jButtonExcluirCliente.setMnemonic('x');
        jButtonExcluirCliente.setText("Excluir");
        jButtonExcluirCliente.setMaximumSize(new java.awt.Dimension(77, 23));
        jButtonExcluirCliente.setMinimumSize(new java.awt.Dimension(77, 23));
        jButtonExcluirCliente.setPreferredSize(new java.awt.Dimension(77, 23));
        jButtonExcluirCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExcluirClienteActionPerformed(evt);
            }
        });

        jButtonAlterarCliente.setMnemonic('m');
        jButtonAlterarCliente.setText("Modificar");
        jButtonAlterarCliente.setEnabled(false);
        jButtonAlterarCliente.setMaximumSize(new java.awt.Dimension(77, 23));
        jButtonAlterarCliente.setMinimumSize(new java.awt.Dimension(77, 23));
        jButtonAlterarCliente.setPreferredSize(new java.awt.Dimension(77, 23));
        jButtonAlterarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAlterarClienteActionPerformed(evt);
            }
        });

        jButtonCancelarCliente.setMnemonic('c');
        jButtonCancelarCliente.setText("Cancelar");
        jButtonCancelarCliente.setEnabled(false);
        jButtonCancelarCliente.setMaximumSize(new java.awt.Dimension(77, 23));
        jButtonCancelarCliente.setMinimumSize(new java.awt.Dimension(77, 23));
        jButtonCancelarCliente.setPreferredSize(new java.awt.Dimension(77, 23));
        jButtonCancelarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarClienteActionPerformed(evt);
            }
        });

        jTextFieldTelefone.setEnabled(false);

        jButtonBuscar.setText("Buscar");
        jButtonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBuscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelCadastroClienteLayout = new javax.swing.GroupLayout(jPanelCadastroCliente);
        jPanelCadastroCliente.setLayout(jPanelCadastroClienteLayout);
        jPanelCadastroClienteLayout.setHorizontalGroup(
            jPanelCadastroClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCadastroClienteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelCadastroClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelCadastroClienteLayout.createSequentialGroup()
                        .addGroup(jPanelCadastroClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelCadastroClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelCadastroClienteLayout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(0, 103, Short.MAX_VALUE))
                            .addComponent(jTextFieldTelefone)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelCadastroClienteLayout.createSequentialGroup()
                        .addGroup(jPanelCadastroClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldCodigo)
                            .addGroup(jPanelCadastroClienteLayout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelCadastroClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(jPanelCadastroClienteLayout.createSequentialGroup()
                                .addComponent(jComboBoxNome, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonBuscar))))
                    .addGroup(jPanelCadastroClienteLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jButtonAdicionarCliente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonSalvarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonExcluirCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonAlterarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonCancelarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanelCadastroClienteLayout.setVerticalGroup(
            jPanelCadastroClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCadastroClienteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelCadastroClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelCadastroClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonBuscar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelCadastroClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelCadastroClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanelCadastroClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAdicionarCliente)
                    .addComponent(jButtonSalvarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonExcluirCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonAlterarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonCancelarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanelFiltro.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanelFiltro.setDoubleBuffered(false);

        grupoFiltro.add(jRadioButtonSemFiltro);
        jRadioButtonSemFiltro.setSelected(true);
        jRadioButtonSemFiltro.setText("Sem Filtro");
        jRadioButtonSemFiltro.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        grupoFiltro.add(jRadioButtonPagamentos);
        jRadioButtonPagamentos.setText("Pagamentos");

        grupoFiltro.add(jRadioButtonPendencias);
        jRadioButtonPendencias.setText("Pendências");

        jLabel5.setText("Filtro de pendências:");

        jLabel6.setText("Início:");

        jDateInicio.setDate(new Date());
        jDateInicio.setMaxSelectableDate(new Date());
        jDateInicio.setMinSelectableDate(new java.util.Date(662698861000L));

        jDateFinal.setDate(new Date());
        jDateFinal.setMaxSelectableDate(new Date());

        jLabel7.setText("Fim:");

        jButtonPesquisarPendencia.setMnemonic('q');
        jButtonPesquisarPendencia.setText("Pesquisar");
        jButtonPesquisarPendencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPesquisarPendenciaActionPerformed(evt);
            }
        });

        jButtonLimparTela.setMnemonic('l');
        jButtonLimparTela.setText("Limpar");
        jButtonLimparTela.setMaximumSize(new java.awt.Dimension(79, 23));
        jButtonLimparTela.setMinimumSize(new java.awt.Dimension(79, 23));
        jButtonLimparTela.setPreferredSize(new java.awt.Dimension(79, 23));
        jButtonLimparTela.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLimparTelaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelFiltroLayout = new javax.swing.GroupLayout(jPanelFiltro);
        jPanelFiltro.setLayout(jPanelFiltroLayout);
        jPanelFiltroLayout.setHorizontalGroup(
            jPanelFiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelFiltroLayout.createSequentialGroup()
                .addGroup(jPanelFiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelFiltroLayout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(jButtonPesquisarPendencia)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonLimparTela, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelFiltroLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanelFiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addGroup(jPanelFiltroLayout.createSequentialGroup()
                                .addComponent(jRadioButtonSemFiltro)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jRadioButtonPagamentos)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jRadioButtonPendencias))
                            .addGroup(jPanelFiltroLayout.createSequentialGroup()
                                .addGroup(jPanelFiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jDateInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanelFiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jDateFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelFiltroLayout.setVerticalGroup(
            jPanelFiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelFiltroLayout.createSequentialGroup()
                .addContainerGap(12, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addGap(9, 9, 9)
                .addGroup(jPanelFiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButtonSemFiltro)
                    .addComponent(jRadioButtonPagamentos)
                    .addComponent(jRadioButtonPendencias))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelFiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelFiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDateInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDateFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelFiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonPesquisarPendencia)
                    .addComponent(jButtonLimparTela, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10))
        );

        jPanelPendencias.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jTablePendencias.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTablePendencias.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTablePendenciasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTablePendencias);

        jButtonIncluirPendencia.setMnemonic('i');
        jButtonIncluirPendencia.setText("Incluir");
        jButtonIncluirPendencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonIncluirPendenciaActionPerformed(evt);
            }
        });

        jButtonExcluirLinhaPendencia.setMnemonic('e');
        jButtonExcluirLinhaPendencia.setText("Excluir linha");
        jButtonExcluirLinhaPendencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExcluirLinhaPendenciaActionPerformed(evt);
            }
        });

        jButtonLimparFichaPendencia.setMnemonic('f');
        jButtonLimparFichaPendencia.setText("Limpar ficha");
        jButtonLimparFichaPendencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLimparFichaPendenciaActionPerformed(evt);
            }
        });

        jButtonPagamentoPendencia.setMnemonic('p');
        jButtonPagamentoPendencia.setText("Pagamento");
        jButtonPagamentoPendencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPagamentoPendenciaActionPerformed(evt);
            }
        });

        jButtonRelatorioPendencia.setMnemonic('r');
        jButtonRelatorioPendencia.setText("Relatório");
        jButtonRelatorioPendencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRelatorioPendenciaActionPerformed(evt);
            }
        });

        jLabel8.setText("Total:");

        jLabelValorTotal.setText("00,00");

        javax.swing.GroupLayout jPanelPendenciasLayout = new javax.swing.GroupLayout(jPanelPendencias);
        jPanelPendencias.setLayout(jPanelPendenciasLayout);
        jPanelPendenciasLayout.setHorizontalGroup(
            jPanelPendenciasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPendenciasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelPendenciasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanelPendenciasLayout.createSequentialGroup()
                        .addComponent(jButtonIncluirPendencia, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonExcluirLinhaPendencia)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonLimparFichaPendencia)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonPagamentoPendencia)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonRelatorioPendencia, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabelValorTotal)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanelPendenciasLayout.setVerticalGroup(
            jPanelPendenciasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPendenciasLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelPendenciasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelPendenciasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButtonExcluirLinhaPendencia)
                        .addComponent(jButtonPagamentoPendencia)
                        .addComponent(jButtonRelatorioPendencia)
                        .addComponent(jButtonIncluirPendencia)
                        .addComponent(jButtonLimparFichaPendencia))
                    .addGroup(jPanelPendenciasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8)
                        .addComponent(jLabelValorTotal)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton1.setText("Sair");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelPendencias, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanelCadastroCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanelFiltro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanelCadastroCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelFiltro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelPendencias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldEnderecoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldEnderecoActionPerformed
      
    }//GEN-LAST:event_jTextFieldEnderecoActionPerformed

    private void jButtonAdicionarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAdicionarClienteActionPerformed
        ButtonAdicionar();
        jComboBoxNome.setSelectedItem(null);
    }//GEN-LAST:event_jButtonAdicionarClienteActionPerformed

    private void jButtonCancelarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarClienteActionPerformed
         ButtonSalvarCancelar();
         LimparCamposCliente();
    }//GEN-LAST:event_jButtonCancelarClienteActionPerformed

    private void jButtonSalvarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalvarClienteActionPerformed
           Clientes cliente = new Clientes();
           String nome = (String) jComboBoxNome.getSelectedItem();
           cliente.setNome(nome.toUpperCase());
           cliente.setTelefone(jTextFieldTelefone.getText());
           cliente.setEndereco(jTextFieldEndereco.getText());
           ClientesImp cimp = new ClientesImp();
        try {
            cimp.validaCliente(cliente);
            if ("".equals(jTextFieldCodigo.getText())) {
                cimp.inserir(cliente); 
            } else {
                cliente.setCd_cliente(Integer.parseInt(jTextFieldCodigo.getText()));
                cimp.atualizar(cliente);
            }     
             ButtonSalvarCancelar();
             jComboBoxNome.removeAllItems();     
             jComboBoxNome.setSelectedItem(null);
             LimparCamposCliente();
             buscarTodosOsUsuarios();
        } catch (ClientesException ex) { 
            JOptionPane.showMessageDialog(null, ex.getMessage(), "ERRO",
                    JOptionPane.ERROR_MESSAGE);
           
        }
           
        
       
    }//GEN-LAST:event_jButtonSalvarClienteActionPerformed

    private void jButtonLimparTelaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLimparTelaActionPerformed
        AtivaDesativaJPanel(jPanelPendencias, false);
        AtivaDesativaJPanel(jPanelFiltro, false);
        AtivaDesativaJPanel(jPanelCadastroCliente, true);
        LimparCamposCliente();
        ButtonSalvarCancelar();
        
    }//GEN-LAST:event_jButtonLimparTelaActionPerformed

    private void jButtonPesquisarPendenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPesquisarPendenciaActionPerformed
        AtivaDesativaJPanel(jPanelPendencias, true);
        AtivaDesativaJPanel(jPanelCadastroCliente, false);
        PendenciasImp pimp = new PendenciasImp();
        ArrayList<Pendencias> lista;
        SimpleDateFormat formatDate = new SimpleDateFormat("dd/MM/yyyy");
        String dataInicio = formatDate.format(jDateInicio.getDate());
        String dataFinal = formatDate.format(jDateFinal.getDate());
        Pendencias pendencia;
        if( jRadioButtonPagamentos.isSelected()) {
            try {
                 lista = pimp.pesquisarPagamentos(jTextFieldCodigo.getText(), dataInicio, dataFinal);
                 listaRelatorio = lista;
                 jTablePendencias.setAutoCreateRowSorter(true);
                 jTablePendencias.setModel(new TableModelPendencias(lista));
                 lista = pimp.somarValorPagamento(dataInicio, dataFinal, jTextFieldCodigo.getText());
                 pendencia = lista.remove(0);
                 jLabelValorTotal.setText(pendencia.getValor());
            } catch (PendenciasException ex) {
              JOptionPane.showMessageDialog(null, "Não foi possível carregar os dados!",
                             "Erro", JOptionPane.ERROR_MESSAGE);
            }
        }
        if( jRadioButtonPendencias.isSelected()){
            try {
                lista = pimp.pesquisarPendencias(jTextFieldCodigo.getText(), dataInicio, dataFinal);
                listaRelatorio = lista;
                jTablePendencias.setAutoCreateRowSorter(true);
                 jTablePendencias.setModel(new TableModelPendencias(lista));
                 lista = pimp.somarValorPendencia(dataInicio, dataFinal, jTextFieldCodigo.getText());
                 pendencia = lista.remove(0);
                 jLabelValorTotal.setText(pendencia.getValor());
            } catch (PendenciasException ex) {
               JOptionPane.showMessageDialog(null, "Não foi possível carregar os dados!",
                             "Erro", JOptionPane.ERROR_MESSAGE);
            }
        }
        if( jRadioButtonSemFiltro.isSelected()){
            dataInicio = "10/10/2000";
            try {
                lista = pimp.pesquisar("cd_cliente", jTextFieldCodigo.getText(), dataInicio, dataFinal);
                listaRelatorio = lista;
                jTablePendencias.setAutoCreateRowSorter(true);
                 jTablePendencias.setModel(new TableModelPendencias(lista));
                 lista = pimp.somarValor(dataInicio, dataFinal, jTextFieldCodigo.getText());
                 
                 pendencia = lista.remove(0);
                 jLabelValorTotal.setText(pendencia.getValor());
            } catch (PendenciasException ex) {
               JOptionPane.showMessageDialog(null, "Não foi possível carregar os dados!",
                             "Erro", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_jButtonPesquisarPendenciaActionPerformed

    private void jButtonAlterarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAlterarClienteActionPerformed
        ButtonAdicionar();
        AtivaDesativaJPanel(jPanelFiltro, false);
        //AtivaDesativaJPanel(jPanelCadastroCliente, false);
        AtivaDesativaJPanel(jPanelPendencias, false);
    }//GEN-LAST:event_jButtonAlterarClienteActionPerformed

    private void jButtonExcluirClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExcluirClienteActionPerformed
        if (jTextFieldCodigo.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Não é possível excluir um cliente sem pesquisa-lo!",
                             "Erro", JOptionPane.ERROR_MESSAGE);
        } else {
            if (JOptionPane.showConfirmDialog(null, "Deseja excluir este Cliente? Todas as suas pendências "
                    + "serão apagadas e não será possível recupera-las", "Atenção", 
                    JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
        Clientes cliente = new Clientes();
        ClientesImp cimp = new ClientesImp();
        cliente.setCd_cliente(Integer.parseInt(jTextFieldCodigo.getText()));
        PendenciasImp pimp = new PendenciasImp();
        
        try {
            pimp.apagar("cd_cliente", Integer.parseInt(jTextFieldCodigo.getText()));
             cimp.apagar(cliente);
             jComboBoxNome.removeAllItems();     
             jComboBoxNome.setSelectedItem(null);  
             LimparCamposCliente();    
             buscarTodosOsUsuarios();
             ButtonSalvarCancelar();
             LimparCamposCliente();
        } catch (ClientesException | PendenciasException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage(),
                             "Erro", JOptionPane.ERROR_MESSAGE);
        }
            }
        }
    }//GEN-LAST:event_jButtonExcluirClienteActionPerformed

    private void jButtonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuscarActionPerformed
                    ClientesImp cimp = new ClientesImp();
                     Clientes cliente;
                     ArrayList<Clientes> item;
                     try {
                         item = cimp.pesquisar("nome", (String) jComboBoxNome.getSelectedItem());
                         cliente = item.remove(0);
                         jTextFieldCodigo.setText(String.valueOf(cliente.getCd_cliente()));
                         jTextFieldEndereco.setText(cliente.getEndereco());
                         jTextFieldTelefone.setText(cliente.getTelefone());  
                         AtivaDesativaJPanel(jPanelFiltro, true);
                         //AtivaDesativaJPanel(jPanelCadastroCliente, false);
                         AtivaDesativaJPanel(jPanelPendencias, true);
                         buscarTodasAsPendencias(String.valueOf(cliente.getCd_cliente()));
                         jButtonAlterarCliente.setEnabled(true);
                    } catch (ClientesException ex) {
                         JOptionPane.showMessageDialog(null, "Cliente não encontrado!",
                                 "Atenção", JOptionPane.WARNING_MESSAGE);
                     }    
    }//GEN-LAST:event_jButtonBuscarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButtonExcluirLinhaPendenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExcluirLinhaPendenciaActionPerformed
           if (jTablePendencias.getRowCount() > 0){
        int r = jTablePendencias.getSelectedRow();
        String value = (String) jTablePendencias.getValueAt(r, 0);
        PendenciasImp pimp = new PendenciasImp();
        try {
            if (JOptionPane.showConfirmDialog(null, "Deseja excluir esta pendência?", "Atenção", 
                    JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                 pimp.apagar("cd_pendencia", Integer.parseInt(value));
                 buscarTodasAsPendencias(jTextFieldCodigo.getText());
                 
                // this.jButtonPesquisarPendenciaActionPerformed(evt);
            }
        } catch (PendenciasException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        } 
           } else {
               JOptionPane.showMessageDialog(null, "Não há valores a serem excluidos!", "Informativo",
                       JOptionPane.INFORMATION_MESSAGE);
           }
    }//GEN-LAST:event_jButtonExcluirLinhaPendenciaActionPerformed
  
    private void jButtonLimparFichaPendenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLimparFichaPendenciaActionPerformed
        PendenciasImp pimp = new PendenciasImp();
        String value = jTextFieldCodigo.getText();
        try {
            if (JOptionPane.showConfirmDialog(null, "Deseja limpar esta ficha? Nenhum valor será acrescentado ao caixa.", "Atenção", 
                    JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                 pimp.apagar("cd_cliente", Integer.parseInt(value));
                this.jButtonPesquisarPendenciaActionPerformed(evt);
            }  
        } catch (PendenciasException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }//GEN-LAST:event_jButtonLimparFichaPendenciaActionPerformed

    private void jButtonPagamentoPendenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPagamentoPendenciaActionPerformed
        double valor_maximo = Double.parseDouble(jLabelValorTotal.getText());
        jTela_Pagamento telaPagamento = new jTela_Pagamento(jTextFieldCodigo.getText(),valor_maximo);
        telaPagamento.setModal(true);
        telaPagamento.setVisible(true);
    }//GEN-LAST:event_jButtonPagamentoPendenciaActionPerformed

    private void jButtonIncluirPendenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonIncluirPendenciaActionPerformed
       jTela_Pendencias abrirPendencias = new jTela_Pendencias(jTextFieldCodigo.getText(), 
            (String)jComboBoxNome.getSelectedItem());
       abrirPendencias.setModal(true);
       abrirPendencias.setVisible(true);

       
    }//GEN-LAST:event_jButtonIncluirPendenciaActionPerformed

    private void jTablePendenciasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTablePendenciasMouseClicked
        if (evt.getClickCount() == 2 && !evt.isConsumed()) {
            JOptionPane.showInputDialog(this, "Nova descrição:","Alterar descrição");
            //Alterar Descrição e Preço
         }
    }//GEN-LAST:event_jTablePendenciasMouseClicked

    private void jButtonRelatorioPendenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRelatorioPendenciaActionPerformed
            JasperReport report = null;  
        try {
            report = JasperCompileManager
                    .compileReport("c:/relatorios/clientesReport.jrxml");
            JasperPrint print = JasperFillManager.fillReport(report, null,
				new JRBeanCollectionDataSource(listaRelatorio));
		JasperViewer.viewReport(print, false); 
        } catch (JRException ex) {
            Logger.getLogger(jTela_Clientes.class.getName()).log(Level.SEVERE, null, ex);
        }    
        
    }//GEN-LAST:event_jButtonRelatorioPendenciaActionPerformed

    private void jComboBoxNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxNomeActionPerformed
      
    }//GEN-LAST:event_jComboBoxNomeActionPerformed

    private void jComboBoxNomeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBoxNomeKeyPressed
        
    }//GEN-LAST:event_jComboBoxNomeKeyPressed

   
   
    

    public static void main(String args[]) {
        try {
            UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
            Logger.getLogger(jTela_Clientes.class.getName()).log(Level.SEVERE, null, ex);
        }
 
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new jTela_Clientes().setVisible(true);
            }
        });
        
            
        
    }
    
    private void ButtonSalvarCancelar(){
        jButtonAdicionarCliente.setEnabled(true);
        jButtonBuscar.setEnabled(true);
        jButtonAlterarCliente.setEnabled(false);
        jButtonExcluirCliente.setEnabled(true);
        
        jTextFieldEndereco.setEnabled(false);
        jTextFieldTelefone.setEnabled(false);
        jTextFieldCodigo.setEnabled(false);
        
        jButtonCancelarCliente.setEnabled(false);
        jButtonSalvarCliente.setEnabled(false);
        
        
    }
    
    private void ButtonAdicionar(){
        jButtonAdicionarCliente.setEnabled(false);
        jButtonBuscar.setEnabled(false);
        
        jTextFieldEndereco.setEnabled(true);
        jTextFieldTelefone.setEnabled(true);
        
        jButtonCancelarCliente.setEnabled(true);
        jButtonSalvarCliente.setEnabled(true);
        
    }
    
    private void LimparCamposCliente(){
        jTextFieldCodigo.setText("");
        jTextFieldEndereco.setText("");
        jTextFieldTelefone.setText("");
        jLabelValorTotal.setText("0.00");
        DefaultTableModel defaultModel = new DefaultTableModel();
        jTablePendencias.setModel(defaultModel);
        
    }
    
    private void AtivaDesativaJPanel(javax.swing.JPanel panel, boolean bool){
         for (int i = 0; i < panel.getComponentCount(); i++ ) {  
              panel.getComponent(i).setEnabled(bool);
            }  
    }
    
    private void buscarTodosOsUsuarios(){
        ClientesImp clienteImp = new ClientesImp();
        Clientes cliente;
        ArrayList<Clientes> lista;
        TreeSet<String> itens = new TreeSet<>();
                 try {
                    lista = clienteImp.pesquisar();
                    while (!lista.isEmpty()){
                        cliente = lista.remove(0);
                       itens.add(cliente.getNome());
                      }
                      for (String s : itens) {
                        jComboBoxNome.addItem(s);
                        }
                     AutoCompleteDecorator.decorate(jComboBoxNome);
                } catch (ClientesException e) {
                     JOptionPane.showMessageDialog(null, "Não foi possível carregar os dados!",
                             "Erro", JOptionPane.ERROR_MESSAGE);
                }
    }
    /*Evento KeyPressed com Tecla ENTER no componente jComboBox*/
    private void jComboBoxNomeKeyPressed(){
          jComboBoxNome.getEditor().getEditorComponent().addKeyListener(new KeyAdapter() {  
            @Override  
            public void keyPressed(KeyEvent e) {  
                 if (e.getKeyCode()==KeyEvent.VK_ENTER) {  

                     ClientesImp cimp = new ClientesImp();
                     Clientes cliente;
                     ArrayList<Clientes> item;
                     try {
                         item = cimp.pesquisar("nome", (String) jComboBoxNome.getSelectedItem());
                         cliente = item.remove(0);
                         jTextFieldCodigo.setText(String.valueOf(cliente.getCd_cliente()));
                         jTextFieldEndereco.setText(cliente.getEndereco());
                         jTextFieldTelefone.setText(cliente.getTelefone());  
                         AtivaDesativaJPanel(jPanelFiltro, true);
                         AtivaDesativaJPanel(jPanelPendencias, true);
                         AtivaDesativaJPanel(jPanelCadastroCliente, false);
                         buscarTodasAsPendencias(String.valueOf(cliente.getCd_cliente()));
                         //jButtonAlterarCliente.setEnabled(true);

                         
                         
                    } catch (ClientesException ex) {
                         JOptionPane.showMessageDialog(null, "Cliente não encontrado!",
                                 "Atenção", JOptionPane.WARNING_MESSAGE);
                     }    
   
                 }               
            }
        });
    }
    
    private void buscarTodasAsPendencias(String cd_cliente){
        PendenciasImp pimp = new PendenciasImp();
        ArrayList<Pendencias> lista;
        Pendencias pendencia;
        try {
                 lista = pimp.pesquisarTodos(cd_cliente);
                 listaRelatorio = lista;
                 jTablePendencias.setAutoCreateRowSorter(true);
                 jTablePendencias.setModel(new TableModelPendencias(lista));    
                 
                 lista = pimp.somarTodos(cd_cliente);
                 
                 pendencia = lista.remove(0);
                 jLabelValorTotal.setText(pendencia.getValor());
        } catch (PendenciasException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
        
        
    }
    
    /*Função de acessibilidade*/
     private void setAcessibilidade() {
        JRootPane meuJPanel = getRootPane();
        meuJPanel.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), "ESCAPE");
        meuJPanel.getRootPane().getActionMap().put("ESCAPE", new AbstractAction("ESCAPE") {

            @Override
            public void actionPerformed(ActionEvent e) {
                dispose();
            }
       });
    } 
     
     
     public static jTela_Clientes getInstance(){
         if (instance == null) {
             instance = new jTela_Clientes();
         }
         return instance;
     }
    
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup grupoFiltro;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonAdicionarCliente;
    private javax.swing.JButton jButtonAlterarCliente;
    private javax.swing.JButton jButtonBuscar;
    private javax.swing.JButton jButtonCancelarCliente;
    private javax.swing.JButton jButtonExcluirCliente;
    private javax.swing.JButton jButtonExcluirLinhaPendencia;
    private javax.swing.JButton jButtonIncluirPendencia;
    private javax.swing.JButton jButtonLimparFichaPendencia;
    private javax.swing.JButton jButtonLimparTela;
    private javax.swing.JButton jButtonPagamentoPendencia;
    private javax.swing.JButton jButtonPesquisarPendencia;
    private javax.swing.JButton jButtonRelatorioPendencia;
    private javax.swing.JButton jButtonSalvarCliente;
    private javax.swing.JComboBox jComboBoxNome;
    private com.toedter.calendar.JDateChooser jDateFinal;
    private com.toedter.calendar.JDateChooser jDateInicio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabelValorTotal;
    private javax.swing.JPanel jPanelCadastroCliente;
    private javax.swing.JPanel jPanelFiltro;
    private javax.swing.JPanel jPanelPendencias;
    private javax.swing.JRadioButton jRadioButtonPagamentos;
    private javax.swing.JRadioButton jRadioButtonPendencias;
    private javax.swing.JRadioButton jRadioButtonSemFiltro;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTablePendencias;
    private javax.swing.JTextField jTextFieldCodigo;
    private javax.swing.JTextField jTextFieldEndereco;
    private javax.swing.JFormattedTextField jTextFieldTelefone;
    // End of variables declaration//GEN-END:variables
}
